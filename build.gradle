plugins {
    id 'net.neoforged.gradle.userdev' version '7.0.123'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

// ДОБАВЛЯЕМ РЕПОЗИТОРИИ ДЛЯ ЗАВИСИМОСТЕЙ
repositories {
    // ВОТ ОНО. РЕПОЗИТОРИЙ, ГДЕ ЛЕЖИТ SAM NEOFORGE.
    maven {
        name = 'NeoForge'
        url = 'https://maven.neoforged.net/releases'
    }
    // Репозиторий для Curios, GeckoLib и других модов
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        // Этот синтаксис верный, он заработает, когда 'server' будет найден
        args = ['--nogui']
    }

    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        // Этот синтаксис верный, он заработает, когда 'data' будет найден
        args = ['--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()]
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation fg.deobf("curse.maven:curios-309927:6665790")
    implementation fg.deobf("curse.maven:geckolib-388172:6659026")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}