// build.gradle

plugins {
    id 'net.neoforged.gradle.userdev' version '7.0.123'
}

// ОБЪЯВЛЕНИЕ РЕПОЗИТОРИЕВ ДЛЯ ЗАВИСИМОСТЕЙ ПРОЕКТА
// Плагин NeoForge ожидает увидеть этот блок именно здесь.
repositories {
    // Используем exclusiveContent для CurseMaven - это самый эффективный способ.
    // Gradle будет искать зависимости 'curse.maven' ТОЛЬКО в этом репозитории.
    exclusiveContent {
        forRepository {
            maven {
                url "https.cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
}


// Далее идет остальная часть твоего файла без изменений.
// Я скопировал ее из твоего примера.

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        // programArguments.add('--nogui')
    }
    gameTestServer {
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
    data {
        // programArguments.addAll([...])
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    // Теперь Gradle знает, где искать эти зависимости, благодаря блоку repositories выше
    implementation "curse.maven:curios-309927:6529130"
    implementation "curse.maven:geckolib-388172:6659026"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}